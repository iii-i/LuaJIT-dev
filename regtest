#!/usr/bin/env python3
from argparse import ArgumentParser
from multiprocessing import cpu_count
import os
from shutil import rmtree
from subprocess import check_call


def main():
    parser = ArgumentParser()
    parser.add_argument(
        "--quick",
        action="store_true",
        help="Do not use valgrind",
    )
    args = parser.parse_args()
    dev = os.path.dirname(os.path.realpath(__file__))
    repo = os.path.join(dev, "LuaJIT")
    prefix = os.path.join(dev, "dist")
    nproc = cpu_count()
    rmtree(prefix, ignore_errors=True)
    for target in ("clean", "all", "install"):
        check_call(
            [
                "make",
                f"-j{nproc}",
                "CCDEBUG=-g",
                "XCFLAGS=-DLUA_USE_ASSERT -DLUAJIT_USE_VALGRIND",
                f"PREFIX={prefix}",
                target,
            ],
            cwd=repo,
        )
    test_repo = os.path.join(dev, "luajit2-test-suite")
    check_call(["./run-tests", *(() if args.quick else ("-v",)), prefix], cwd=test_repo)


if __name__ == "__main__":
    main()
